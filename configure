#!/usr/bin/env python3

# Copyright 2023 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
"""Top level configure script conditionally calling more specific configuration
scripts"""

import pathlib
import shlex
import subprocess

from shutil import which


def run_shell(cmd_str, stdout=None):
  cmd = shlex.split(cmd_str)
  cmd_rslt = subprocess.run(cmd, check=True, text=True, stdout=stdout)

  if cmd_rslt.returncode != 0:
    raise RuntimeError(f"[ERROR] Command `{cmd_str}` returned with code: "
                       f"{cmd_rslt.returncode}")

  if stdout is not None:
    return cmd_rslt.stdout


def _get_input(question, default_answer):
  try:
    answer = input(f"\n- {question} ")
  except EOFError:
    answer = default_answer

  return (answer or default_answer).strip().lower()


def get_input(question, default_answer='', accepted_answers=None):
  if accepted_answers is None:
    raise RuntimeError("Argument `accepted_answers` is None.")

  accepted_answers = [x.strip().lower() for x in accepted_answers]

  while True:
    answer = _get_input(question, default_answer)
    if answer not in accepted_answers:
      print(f"\tERROR: Unsupported answer received: {answer}."
            f"Expected: {accepted_answers}")
      continue
    break

  return answer


def print_header(header_name):
  print("\n" + "-" * 80)
  print(f"[*] {header_name} ...")
  print("-" * 80)


if __name__ == "__main__":

  IREE_DIR = pathlib.Path(__file__).resolve().parent

  # ====================== VSCode Development Container ===================== #
  print_header("VS Code Development Container")

  if get_input(
      "Do you wish to use and configure VS Code Development Container [y/N]?",
      default_answer="n",
      accepted_answers=["y", "n"]) == "y":

    run_shell(f"{which('python3')} {IREE_DIR / '.devcontainer/configure.py'}")

  # ================================= Bazel ================================= #
  print_header("Bazel")

  if get_input(
      "Do you wish to use and configure Bazel [y/N]?",
      default_answer="n",
      accepted_answers=["y", "n"]) == "y":

    run_shell(f"{which('python3')} {IREE_DIR / 'build_tools/bazel/configure_bazel.py'}")

  # %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% #

  print_header("Configuration finished")
